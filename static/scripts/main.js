var upload_form = document.getElementById("upload-form");
var file_uploader = document.getElementById("file-uploader");
var loader = document.getElementById("loader");
var fader = document.getElementById("fader");
var init = document.getElementById("init");
var msg_error = document.getElementById("error-msg");
var error_board = document.getElementById("error");
var result_board = document.getElementById("results-div");
var path = '/staticmodel';


// check if there is a file selected then enable the submit button
file_uploader.addEventListener("change", function () {
    if (file_uploader.files.length > 0) {
        submit_btn.disabled = false;
    } else {
        submit_btn.disabled = true;
    }
});

upload_form.addEventListener("submit", function (event) {
    event.preventDefault();
    
    showLoader(true);
    submit_btn.disabled = true;
    init.style.display = "none";
    error_board.style.display = "none";
    result_board.style.display = "none";

    const formData = new FormData(upload_form);
    const xhr = new XMLHttpRequest();
    xhr.open('POST', path, true);
    xhr.onload = function () {
        upload_form.reset();
        if (xhr.status === 200) {
            var response = JSON.parse(xhr.responseText);

            if (response.success) {
                showLoader(false);
                result_board.style.display = "block";
                update_display(response.results.prediction, response.results.confidence);

            } else {
                showLoader(false);
                error_board.style.display = "block";
                msg_error.innerHTML = response.message;
            }
        } else {
            alert('An Internal error occurred.');
            showLoader(false);
            init.style.display = "block";
            error_board.style.display = "none";
        }
    };
    xhr.send(formData);
});

// Function to update the display
function update_display(family, confidence) {
    var result = document.getElementById("result");
    var word = ''

    if (confidence < 40) {
        result.innerHTML = "We are not confident enough to make a prediction on the sample you uploaded.";
        return;
    }

    if (confidence > 95) {
        word = "highly likely";
    } else if (confidence > 70) {
        word = "likely";
    } else {
        word = "possibly";
    }

    result.innerHTML = "The uploaded sample is <b>" + word + "</b> from the family of <b>" + family +
                    "</b> with a confidence of <b>" + confidence + "%</b>.";
}

// Function to reset the display
function showLoader(show) {
    if (show) {
        loader.style.display = "block";
        fader.style.opacity = 0;
    } else {
        loader.style.display = "none";
        fader.style.opacity = 1;
    }
}


let toggleSwitch = document.getElementsByClassName('redButton')[0]

function option1(e) {
    toggleSwitch.classList.add('horizTranslate1');
    toggleSwitch.classList.remove('horizTranslate2');
    toggleSwitch.classList.remove('horizTranslate3');
    path = '/staticmodel';
    resetColor();
    e.style.color = 'white';
}

function option2(e) {
    toggleSwitch.classList.add('horizTranslate2');
    toggleSwitch.classList.remove('horizTranslate3');
    toggleSwitch.classList.remove('horizTranslate1');
    path = '/cgfmodel';
    resetColor();
    e.style.color = 'white';
}

function option3(e) {
    toggleSwitch.classList.add('horizTranslate3');
    toggleSwitch.classList.remove('horizTranslate2');
    toggleSwitch.classList.remove('horizTranslate1');
    path = '/binlexmodel';
    resetColor();
    e.style.color = 'white';
}

function resetColor() {
    let options = document.getElementsByClassName('legendText');
    for (let i = 0; i < options.length; i++) {
        options[i].style.color = 'black';
    }
}