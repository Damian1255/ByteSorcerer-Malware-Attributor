import os
from flask import Flask, render_template, redirect, url_for, session, request, jsonify
from werkzeug.utils import secure_filename
import src.predictor as predictor
import src.extractor as extractor

UPLOAD_FOLDER = 'uploads'

# Initialize Flask app
app = Flask(__name__, static_url_path='/static')
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
    
@app.route('/', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        # save the file to the upload folder
        for image in request.files.getlist('file'):
            if image:
                imagename = secure_filename(image.filename)
                image.save(os.path.join(app.config['UPLOAD_FOLDER'], imagename))
            else:
                return jsonify({'success': False, 'message': 'File not uploaded'})
            
        # process the file to extract features
        features = extractor.extract_features(os.path.join(app.config['UPLOAD_FOLDER'], imagename))

        # delete the file
        os.remove(os.path.join(app.config['UPLOAD_FOLDER'], imagename))

        # preprocess the features
        features = predictor.preprocess_data(features)

        # predict the class of the file
        results = predictor.predict(features)

        return jsonify({'success': True, 'results': results})
        
    return render_template('index.html')
    
if __name__ == '__main__':
    app.run(debug=True)

